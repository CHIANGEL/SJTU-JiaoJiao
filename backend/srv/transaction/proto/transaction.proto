syntax = "proto3";

service Transaction {
    rpc Create (TransactionCreateRequest) returns (TransactionCreateResponse);
    rpc Update (TransactionUpdateRequest) returns (TransactionUpdateResponse);
    rpc Find (TransactionFindRequest) returns (TransactionFindResponse);
}

enum TransStatus {
    UNKNOWN = 0;
    ASKING = 1;
    ACCEPTED = 2;
    REJECTED = 3;
    CLOSED = 4;
    PENDING = 5;
    DONE = 6;
}

message TransactionCreateRequest {
    enum Category {
        UNKNOWN = 0;
        SELL = 1;
        BUY = 2;
    }
    int32 infoID = 1;
    Category category = 2;
    int32 userID = 3;
}

message TransactionCreateResponse {
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
    }
    Status status = 1;
    int32 transactionID = 2;
}

message TransactionUpdateRequest {
    int32 transactionID = 1;
    TransStatus status = 2;
}

message TransactionUpdateResponse {
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    Status status = 1;
}

message TransactionMsg {
    enum Category {
        CATEGORY_UNKNOWN = 0;
        SELL = 1;
        BUY = 2;
    }
    int32 transactionID = 1;
    int32 infoID = 2;
    Category category = 3;
    int32 userID = 4;
    int64 createTime = 5;
    TransStatus status = 6;
}

message TransactionFindRequest {
    enum Category {
        CATEGORY_UNKNOWN = 0;
        SELL = 1;
        BUY = 2;
    }
    int32 infoID = 1;
    Category category = 2;
    int32 userID = 3;
    int64 lowCreateTime = 4;
    int64 highCreateTime = 5;
    TransStatus status = 6;
    uint32 limit = 7;
    uint32 offset = 8;
}

message TransactionFindResponse {
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    Status status = 1;
    repeated TransactionMsg transactions = 2;
}