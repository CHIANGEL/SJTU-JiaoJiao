syntax = "proto3";

service Message {
    rpc Create (MessageCreateRequest) returns (MessageCreateResponse);
    rpc Find (MessageFindRequest) returns (MessageFindResponse);
    rpc Query (MessageQueryRequest) returns (MessageQueryResponse);
}

message MessageInfo{
    enum Type {
        UNKNOWN = 0;
        TEXT = 1;
        PICTURE = 2;
        VIDEO = 3;
    }
    int64 time = 1;
    bool forward = 2;
    Type type = 3;
    string text = 4;
    bool unread = 5;
}

message MessageCreateRequest{
    enum Type {
        UNKNOWN = 0;
        TEXT = 1;
        PICTURE = 2;
        VIDEO = 3;
    }
    int32 fromUser = 1;
    int32 toUser = 2;
    Type type = 3;
    string text = 4;
    bytes file = 5;
}

message MessageCreateResponse {
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
    }
    Status status = 1;
}

message MessageFindRequest {
    enum Way {
        UNKNOWN = 0;
        ONLY_PULL = 1;
        READ_MESSAGE = 2;
        HISTORY = 3;
    }
    int32 fromUser = 1;
    int32 toUser = 2;
    Way way = 3;
    int32 limit = 4;
    int32 offset = 5;
}

message MessageFindResponse {
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    Status status = 1;
    int32 fromUser = 2;
    int32 toUser = 3;
    int32 badge = 4;
    repeated MessageInfo infos = 5;
}

message NewMessage{
    int32 fromUser = 1;
    int32 toUser = 2;
    int32 badge = 3;
    MessageInfo info = 4;
}

message MessageQueryRequest{
    int32 userID = 1;
}

message MessageQueryResponse{
    enum Status {
        UNKNOWN = 0;
        INVALID_PARAM = -1;
        SUCCESS = 1;
        NOT_FOUND = 2;
    }
    Status status = 1;
    repeated NewMessage news = 2;
}